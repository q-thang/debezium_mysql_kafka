version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper:2888:3888

  kafka1:
    image: confluentinc/cp-kafka:latest
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
    restart: unless-stopped
    depends_on:
      - zookeeper

  kafka2:
    image: confluentinc/cp-kafka:latest
    hostname: kafka2
    container_name: kafka2
    ports:
      - "9093:9093"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 2
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9093
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
    restart: unless-stopped
    depends_on:
      - zookeeper

  kafka3:
    image: confluentinc/cp-kafka:latest
    hostname: kafka3
    container_name: kafka3
    ports:
      - "9094:9094"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 3
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9094
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
    restart: unless-stopped
    depends_on:
      - zookeeper

  mysql:
    image: mysql:8.0
    ports:
     - "3307:3306"
    restart: unless-stopped
    environment:
     - MYSQL_ROOT_PASSWORD=${PW}
     - LANG=C.UTF-8
    container_name: mysql_kafka
    volumes:
      - ./db/data:/var/lib/mysql
      - ./db/logistic.sql:/docker-entrypoint-initdb.d/logistic.sql

  connect:
    image: debezium/connect:2.0
    ports:
     - "8083:8083"
    environment:
     - BOOTSTRAP_SERVERS=${BOOTSTRAP_SERVERS}
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=${CONFIG_STORAGE_TOPIC}
     - OFFSET_STORAGE_TOPIC=${OFFSET_STORAGE_TOPIC}
     - STATUS_STORAGE_TOPIC=${STATUS_STORAGE_TOPIC}
    container_name: debezium
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - mysql
    restart: unless-stopped

  manager:
    image: sheepkiller/kafka-manager
    ports:
      - "9000:9000"
    environment:
      - ZK_HOSTS=zookeeper:2181
    container_name: manager
    depends_on:
      - zookeeper

  app:
    build: ./app
    ports:
      - "5000:5000"
    volumes:
      - ./app/:/app
    restart: always
    container_name: app

  server:
    build: ./server
    ports:
      - "8080:8080"
    volumes:
      - ./server:/server
      - /server/node_modules
    restart: always
    container_name: server